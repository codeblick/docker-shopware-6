name: Docker Build and Push

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  DOCKERHUB_REPO: codeblick/shopware-6

jobs:
  build:
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        php_version:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
        include:
          - php_version: "8.0"
            node_version: "16.20.2"
          - php_version: "8.1"
            node_version: "16.20.2"
          - php_version: "8.2"
            node_version: "18.20.0"
          - php_version: "8.3"
            node_version: "20.12.0"
          - php_version: "8.4"
            node_version: "20.12.0"
        with_xdebug:
          - "0"
          - "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          php_version=${{ matrix.php_version }}
          node_version=${{ matrix.node_version }}
          with_xdebug=${{ matrix.with_xdebug }}
          echo "PLATFORM_PAIR=digests_${php_version//\./-}_${node_version//\./-}_${with_xdebug}_${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest (with retry)
        id: build
        uses: ./.github/actions/docker-build-push-retry
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build_args: |
            PHP_VERSION=${{ matrix.php_version }}
            NODE_VERSION=${{ matrix.node_version }}
            WITH_XDEBUG=${{ matrix.with_xdebug }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    if: ${{ success() }}
    runs-on: ubuntu-24.04-arm
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        php_version:
          - 8.0
          - 8.1
          - 8.2
          - 8.3
          - 8.4
        include:
          - php_version: 8.0
            node_version: 16.20.2
          - php_version: 8.1
            node_version: 16.20.2
          - php_version: 8.2
            node_version: 18.20.0
          - php_version: 8.3
            node_version: 20.12.0
          - php_version: 8.4
            node_version: 20.12.0
        with_xdebug:
          - 0
          - 1
    steps:
      - name: Prepare
        run: |
          php_version=${{ matrix.php_version }}
          node_version=${{ matrix.node_version }}
          with_xdebug=${{ matrix.with_xdebug }}
          echo "PLATFORM_PAIR=digests_${php_version//\./-}_${node_version//\./-}_${with_xdebug}_*" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: ${{ env.PLATFORM_PAIR }}
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=raw,value=php-${{ matrix.php_version }}${{ matrix.with_xdebug == '1' && '-xdebug' || '' }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
